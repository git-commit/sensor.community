[
  {
    "id": 1,
    "title": "I would like to buy a fine dust sensor. What do I have to do?",
    "content": "With the shopping list, you can order the individual parts yourself from the manufacturer. Unfortunately, this is not possible with us. Check out our <a href='/en/sensors/airrohr/' target='_blank'>guide to find the shopping list guide</a>"
  },
  {
    "id": "2",
    "title": "What is PM1, PM2.5 and PM10?",
    "content": "PM means Particulate Matter, the particle size in µm <ul class='py-4'> <li>PM10 = 10 μm</li><li>PM2.5 = 2.5 μm</li></ul> The smaller the particulate matter, the more dangerous to people's health."
  },
  {
    "id": "3",
    "title": "Service Life of the SDS011 fine dust sensor",
    "content": "According to the data sheet, the SDS011 sensor we use has a service life in continuous operation of approx. 8,000 hours. Our firmware therefore switches the sensor on for only 20 seconds per measuring interval of 150 seconds. This makes the theoretical lifetime 7.5 times longer. Practically, this should be enough for approx. 4-5 years of operation. Measuring interval 150 seconds (2.5 minutes) <ul class='py-4'> <li>8,000 hours = 0.913 years</li><li>7.5 x 0.913 years = 6.85 years (theoretical service life)</li></ul> Measuring interval 240 seconds (4 minutes) 12 x 0.913 years = 10.96 years (theoretical service life)"
  },
  {
    "id": "4",
    "title": "Energy, Wifi and Data Volume",
    "content": "Cost Calculation: The fine dust sensor as a unit needs about 1 watt, if it would run the whole year, that would be (1W x 24h x 365 days)/ 1000 = 8,76 kWh so about 2,50€/ year.<p>Energy: The USB cable can also be extended to about 6-7m, because only voltage goes over it and no data. A reasonable battery and solar solution is being worked on. Who finds an affordable solution for a use with at least one week, can contact us.<p/><p>WLAN: must always be on, the ESP8266 with our firmware has no memory. If the WLAN is switched off over night, there will be no data.<p/><p>Data amount: is very small, only the ID, the time, the 4 data are transmitted as text.<p/>"
  },
  {
    "id": "5",
    "title": "The wifi name / password has changed",
    "content": "In this case, the sensor should be found again as a WLAN router after a restart (briefly disconnect from power). Then the access data can be changed as in the first configuration (\"Configuration of the fine dust sensor\")."
  },{
  "id": "6",
  "title": "Access sensor data",
  "content": "We provide the data of the sensors as JSON files, which are updated two and a half minute. <ul><li>All sensor values of the last 5 minutes -> <a href='http://api.luftdaten.info/static/v1/data.json' target='_blank'>http://api.luftdaten.info/static/v1/data.json</a></li><li>Values of the last 5 minutes of a specific sensor -> <a href='http://api.luftdaten.info/v1/sensor/sensorid/' target='_blank'>http://api.luftdaten.info/v1/sensor/sensorid/</a></li><li>For WordPress there is <a href='https://wordpress.org/plugins/live-widget-luftdaten/' target='_blank'>a plugin</a> to display the values of one or more sensors</li><li>For FHEM there is a module to read in the data of the sensors, which can be found <a href='https://fhem.de/commandref_DE.html#LuftdatenInfo' target='_blank'>in the reference section</a></li><li>There is also a plugin for \"Home Assistant\", the configuration instructions can be found <a href='https://www.home-assistant.io/integrations/luftdaten#sensor' target='_blank'>Home Assistent Integration</a></li><li> A Homebridge module can be found <a href='https://github.com/toto/homebridge-airrohr' target='_blank'>on Toto's Github</a></li><li>  From the sensor itself, the data can be retrieved as JSON using the address http://{ip-of-the-sensor}/data.json or <code>http://feinstaubsensor-{nodemcu-id}.local</code>. The IP is the IP of the sensor in the local network, not the 192.168.4.1 which is used for the initial configuration. The 2nd variant should normally work under Linux and MacOS. For Windows, software may have to be installed. See the point 'Access to the sensor'</li></ul>"
},
  {
    "id": "7",
    "title": "Access the sensor to change configuration",
    "content": "If the sensor can establish a connection to the WLAN, it can only be reached via the corresponding network. As address you can take the IP address of the sensor, which you can find e.g. via the router. Alternatively the sensor supports access via the address <code>http://feinstaubsensor-{sensorID}.local/</code>. sensorID is the number we also got for the registration of the sensor.\n. Unfortunately this address is not supported by every operating system without additional software. The address should work on macOS, Linux (via the Avahi service) and current versions of Windows 10. Likewise, it should work if Apple iTunes or Skype are installed on Windows 7. With the 'Bonjour print services for Windows' from Apple there is a download of only 5MB, after which the address can also be accessed."
  },
  {
    "id": "8",
    "title": "The configuration page asks for username and password",
    "content": "Here probably the option 'BasicAuth' was activated by mistake. Then the default values should work as login: <p> User: admin </p/><p>Password: feinstaub <p/> Afterwards the option 'BasicAuth' should be deactivated again in the configuration."
  },
  {
    "id": "9",
    "title": "Which servers and ports are used",
    "content": "In the default configuration the following servers are used: <ul> <li>api.airdata.info</li> <li>firmware.airdata.info</li> <li>api.sensor.community</li> <li>firmware.sensor.community</li> <li>api-rrd.madavi.de</li> <li>www.madavi.de</li> <li>pool.ntp.org</li> </ul> <ul> <li>The following ports should be enabled for them:</li> <li>80/TCP HTTP</li> <li>443/TCP HTTPS</li> <li>123/UDP NTP (Network Time Protocol)</li> </ul> <p> If you want to use advanced options like the Custom API or OpenSenseMap, you have to enable the corresponding servers and ports as well.</p>"
  },
  {
    "id": "10",
    "title": "Connect other sensors",
    "content": "More sensors can be connected. Currently the sensor software supports the following sensors: PPD42NS (fine dust, the first sensor we used). SDS011, SDS018, SDS021 (fine dust, the SDS011 is our current sensor) BMP180. After connecting the sensors, they must be activated in the configuration. After that a restart is necessary, because the sensors must be initialized accordingly at startup."
  },
  {
    "id": "11",
    "title": "Connect a display",
    "content": "Displays with the driver chip SSD1306 are connected via I2C (serial bus, several components share the same connection pins, description on <a href='https://de.wikipedia.org/wiki/I%C2%B2C' target='_blank'>Wikipedia</a>): SDA VCC Pin 3V3GND Pin GND, SCL Pin D4 (GPIO2), Pin D3 (GPIOO). After connecting, the display must still be activated in the configuration. Afterwards a restart is necessary, because the display must be initialized accordingly at startup.LCD displays (LCD1602) with I2C connection are connected and configured in the same way. Depending on the used version only the VCC connector has to be connected to 5V or 3V. If the display does not show anything, the I2C address of the LCD should be checked first. After that you can try to change the contrast by turning the potentiometer, which is usually present, so that the text becomes visible."
  },
  {
    "id": "12",
    "title": "3D printed models for brackets, housings,..,",
    "content": "<ul><li><a href='https://www.thingiverse.com/thing:2423413' target='_blank'>Holder with suction cups (3D printing) Housing (3D printing)</a></li><li><a href='https://www.thingiverse.com/thing:2613387' target='_blank'>Housing (3D printed)</a></li><li><a href='https://www.thingiverse.com/thing:2763916' target='_blank'>Housing for sensor with LCD display (3D printed)</a></li><li><a href='https://fablab-wuerzburg.dozuki.com/' target='_blank'>Housing of FabLab Würzburg (3D printing)</a></li><li><a href='https://www.thingiverse.com/thing:2775946' target='_blank'>Mounting frame for installation in surface box (3D print)</a></li></ul>"
  },
  {
    "id": "13",
    "title": "Why do the values fluctuate compared to the official data?",
    "content": "Please note for comparison with official measurement values: The official values are usually Daily averages. The OK-Lab measures in 2 1/2 minute intervals, therefore the values fluctuate much more strongly.\n The values do not claim to be accurate. The sensor used measures PM2.5 and the PM10 value is estimated and can therefore be inaccurate. Individual stations can deliver implausible values. In case of high humidity, especially fog, the values can be significantly higher as the official stations measure the dried fine dust. However, fine dust particles condensed by moisture can increase the negative health effect of fine dust, especially in smog layers.\n In this respect, the OK lab values provide important additional information. However, the scale µg/m3 is not directly applicable for such layers, but can only be used as an orientation. A humidity correction is in preparation. The aim is to provide an additional value that is more comparable with the official values.\n"
  },
  {
    "id": "14",
    "title": "Does the API to get the latest value from the system? Is it possible to request the historical data points?",
    "content": "with more than 13 Million data points per day and as a voluntary project we can't afford a server system that would allow a random access to the data. But we have some \"endpoints\" to get the latest data (over the last 5 minutes): <a href='https://github.com/opendata-stuttgart/meta/wiki/EN-APIs/' target='_blank'>https://github.com/opendata-stuttgart/meta/wiki/EN-APIs/</a>"
  }
]